#!/usr/bin/python --relpath_append ../import syssys.path.insert(0,'..') # adds parent directoryimport numpy as npimport gmshimport pdeimport scipy.sparse as spsimport scipy.sparse.linalgimport timeimport geometriesimport plotly.io as piopio.renderers.default = 'browser'# pio.renderers.default = 'svg'np.set_printoptions(threshold = np.inf)np.set_printoptions(linewidth = np.inf)np.set_printoptions(precision = 8)# p,e,t,q = pde.petq_from_gmsh(filename = 'unit_square.geo',hmax = 0.3)# gmsh.initialize()d = 3l = 10gmsh.initialize()gmsh.model.add("Capacitor plates")geometries.capacitorPlates(a = 20,b = 20,c = 0.5,d = d,l = l)gmsh.option.setNumber("Mesh.Algorithm", 2)gmsh.option.setNumber("Mesh.MeshSizeMax", 0.4)# gmsh.fltk.run()p,e,t,q = pde.petq_generate()MESH = pde.initmesh(p,e,t,q)# TODO:  MESH = pde.refinemesh(p,e,t,q)BASIS = pde.basis()LISTS = pde.lists(MESH)f = lambda x,y : 0*np.sin(np.pi*x)*np.sin(np.pi*y)g1 = lambda x,y : -1+0*xg2 = lambda x,y :  1+0*x# TODO : iwas stimmt net wenn ma quads hatM1 = pde.assemble.h1(MESH,BASIS,LISTS,dict(space = 'P1', matrix = 'M'))M2 = pde.assemb.h1.h1(MESH,BASIS,LISTS,dict(space = 'P1', matrix = 'M'))print(sps.linalg.norm(M1-M2))