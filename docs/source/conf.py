# # Configuration file for the Sphinx documentation builder.
# #
# # This file only contains a selection of the most common options. For a full
# # list see the documentation:
# # https://www.sphinx-doc.org/en/master/usage/configuration.html

# # -- Path setup --------------------------------------------------------------

# # If extensions (or modules to document with autodoc) are in another directory,
# # add these directories to sys.path here. If the directory is relative to the
# # documentation root, use os.path.abspath to make it absolute, like shown here.
# #
# # import os
# # import sys
# # sys.path.insert(0, os.path.abspath('.'))


# # -- Project information -----------------------------------------------------

# project = 'FEM'
# copyright = '2023, Bogdan Radu'
# author = 'Bogdan Radu'


# # -- General configuration ---------------------------------------------------

# # Add any Sphinx extension module names here, as strings. They can be
# # extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# # ones.
# extensions = ["nbsphinx"]

# # Add any paths that contain templates here, relative to this directory.
# templates_path = ['_templates']

# # List of patterns, relative to source directory, that match files and
# # directories to ignore when looking for source files.
# # This pattern also affects html_static_path and html_extra_path.
# exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']


# # -- Options for HTML output -------------------------------------------------

# # The theme to use for HTML and HTML Help pages.  See the documentation for
# # a list of builtin themes.
# #
# html_theme = 'sphinx_rtd_theme'

# # Add any paths that contain custom static files (such as style sheets) here,
# # relative to this directory. They are copied after the builtin static files,
# # so a file named "default.css" will overwrite the builtin "default.css".
# html_static_path = ['static'] #





#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
# NGS-Py documentation build configuration file, created by
# sphinx-quickstart on Sat Dec 31 09:05:01 2016.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import os
# import sys
# sys.path.insert(0, os.path.abspath('.'))

# import sphinx_rtd_theme

# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
# extensions = ["sphinx.ext.autodoc","numpydoc","sphinx.ext.autosummary","sphinx.ext.napoleon","sphinx.ext.intersphinx"]
extensions = ["sphinx.ext.autodoc","sphinx.ext.mathjax","sphinx.ext.todo",
              "IPython.sphinxext.ipython_console_highlighting", "IPython.sphinxext.ipython_directive", "nbsphinx"]


# START nbsphinx stuff
#increase timeout for cell execution, since some files take long to execute
nbsphinx_timeout = 600

# nbsphinx_requirejs_path = 'js/require.min.js'

# Don't add .txt suffix to source files (available for Sphinx >= 1.5):
html_sourcelink_suffix = ''

# Execute notebooks before conversion: 'always', 'never', 'auto' (default)
# nbsphinx_execute = 'never'

# If True, the build process is continued even if an exception occurs:
nbsphinx_allow_errors = False

# This is processed by Jinja2 and inserted before each notebook
# nbsphinx_prolog = r"""
# {% set docname = env.doc2path(env.docname, base='').replace('notebooks/', '') %}

# .. raw:: html

#     <style>
#         .p-Widget {
#             height: 400px;
#         }
#         .dg.main {
#             margin-left: 0px;
#         }
#         div.p-Widget div div div div.dg ul li {
#             list-style: none;
#             margin-left: 0px;
#         }
#         div.p-Widget div div div div.dg ul li div.dg {
#             margin-bottom: 0px;
#         }
#     </style>

# .. only:: html
#     .. role:: raw-html(raw)
#         :format: html

#     .. nbinfo::

#         This page was generated from `{{ docname }}`__.

#     __ {{docname}}
# """

# END nbsphinx stuff

# autosummary_generate = True

# numpydoc_show_class_members = False

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
# master_doc = 'index'

# General information about the project.
project = 'FEM'
# copyright = '2017, Netgen/NGSolve team'
# author = 'Netgen/NGSolve team'

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
# version = '@NGSOLVE_VERSION@'
# The full version, including alpha/beta/rc tags.
# release = '@NGSOLVE_VERSION@'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
# language = 'python'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This patterns also effect to html_static_path and html_extra_path
exclude_patterns = ["_build", "**.ipynb_checkpoints"]

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
# html_theme = 'alabaster'
# html_theme = 'default'

html_theme = 'my_sphinx_rtd_theme'
# install it via: pip install sphinx_rtd_theme
html_theme_path = ["."]

# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['static']

html_js_files = ['iframe_stuff.js']
# html_js_files = [('iframe_stuff.js', {'defer': 'defer'})]

# -- Options for HTMLHelp output ------------------------------------------

# Output file base name for HTML help builder.
# htmlhelp_basename = 'NGS-Pydoc'


# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',

    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
# latex_documents = [
#     (master_doc, 'NGS-Py.tex', 'NGS-Py Documentation',
#      'Joachim Schoeberl', 'manual'),
# ]


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
# man_pages = [
#     (master_doc, 'ngs-py', 'NGS-Py Documentation',
#      [author], 1)
# ]


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
# texinfo_documents = [
#     (master_doc, 'NGS-Py', 'NGS-Py Documentation',
#      author, 'NGS-Py', 'One line description of project.',
#      'Miscellaneous'),
# ]


#html_logo = "_static/logo.png"
# html_favicon = "@CMAKE_CURRENT_SOURCE_DIR@/_static/favicon.ico"
#html_theme_options = {"logo_only" : True}


# variables to use in rst files: (NGS-version is already given by version)
# rst_epilog = """
# .. |NGS-version| replace:: 6.2
# """

rst_epilog = """
.. |python_version| replace:: 3.8

"""

todo_include_todos = True

def setup(app):
    app.add_css_file("custom.css")
    app.add_css_file("css/custom.css")